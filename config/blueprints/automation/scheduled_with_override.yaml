blueprint:
  name: Scheduled Daily Cycle With Overide
  description: Turn a device on daily based on input helpers with MQTT button override
  domain: automation
  input:
    switch_time:
      name: Times
      description: >-
        Select helpers to set times to turn on or off. Multiples supported.
        Must include 'on' or 'off' (but not both) strings in the entity name.
      selector:
        entity:
          multiple: true
          domain: input_datetime
    switch_id:
      name: Device(s)
      description: Device(s) to control
      selector:
        target:
          entity:
            domain: switch
    switch_override:
      name: Override
      description: Override switch to disable timed automation
      selector:
        entity:
          domain: input_boolean
    mqtt_topic:
      name: Topic
      description: Mqtt Topic to subscribe
      default: stat/tasmota_3FEC30/RESULT
      selector:
        text:

trigger:
  - platform: time
    at: !input switch_time
    id: time
  - platform: mqtt
    topic: !input mqtt_topic
    payload: "True"
    value_template: |
      {{ value_json.Button1 is defined }}
    id: override

variables:
  action: |
    {{ trigger.payload_json["Button1"]["Action"] if trigger.payload is defined else none }}

condition: []
action:
  - choose:
      - conditions:
          - condition: trigger
            id: time
          - condition: state
            entity_id: !input switch_override
            state: "off"
          - condition: template
            value_template: |
              {{ trigger.entity_id is search('(on|off)', ignorecase=true) }}
        sequence:
          - service: |
              {% if 'on' in trigger.entity_id %}
                switch.turn_on
              {% else %}
                switch.turn_off
              {% endif %}
            data: {}
            target: !input switch_id
      - conditions:
          - condition: trigger
            id: override
          - condition: template
            value_template: |
              {{ action is search('(HOLD|SINGLE)') }}
        sequence:
          - service: |
              {% if action == "HOLD" %}
                input_boolean.turn_on
              {% else %}
                input_boolean.turn_off
              {% endif %}
            data: {}
            target:
              entity_id: !input switch_override
